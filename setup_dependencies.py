#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Spotify Ad Blocker

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã
3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
4. –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
5. –ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import subprocess
import importlib
import ctypes
import os
import json
from pathlib import Path
from typing import List, Dict, Tuple

# –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
REQUIRED_PACKAGES = {
    'psutil': '5.9.0',
    'requests': '2.28.0', 
    'pycaw': '20220416',
    'pywin32': '305'
}

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
OPTIONAL_PACKAGES = {
    'tqdm': '4.64.0',  # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
    'colorama': '0.4.6',  # –¶–≤–µ—Ç–Ω–æ–π –≤—ã–≤–æ–¥
    'psutil': '5.9.0'  # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã
}

class Colors:
    """ANSI —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞"""
    RED = '\033[91m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    BLUE = '\033[94m'
    MAGENTA = '\033[95m'
    CYAN = '\033[96m'
    WHITE = '\033[97m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    END = '\033[0m'

class DependencyManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Spotify Ad Blocker"""
    
    def __init__(self):
        self.missing_packages = []
        self.failed_packages = []
        self.installed_packages = []
        
    def check_admin_rights(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        try:
            return ctypes.windll.shell32.IsUserAnAdmin()
        except:
            return False
    
    def check_python_version(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
        version = sys.version_info
        if version.major < 3 or (version.major == 3 and version.minor < 7):
            print(f"{Colors.RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}{Colors.END}")
            return False
        
        print(f"{Colors.GREEN}‚úÖ Python {version.major}.{version.minor}.{version.micro} - OK{Colors.END}")
        return True
    
    def check_package(self, package_name: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–∞–∫–µ—Ç–∞"""
        try:
            importlib.import_module(package_name)
            return True
        except ImportError:
            return False
    
    def get_package_version(self, package_name: str) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞"""
        try:
            module = importlib.import_module(package_name)
            return getattr(module, '__version__', 'unknown')
        except:
            return 'not installed'
    
    def install_package(self, package_name: str, version: str = None) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ —á–µ—Ä–µ–∑ pip"""
        try:
            package_spec = f"{package_name}>={version}" if version else package_name
            
            print(f"{Colors.BLUE}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {package_spec}...{Colors.END}")
            
            result = subprocess.run([
                sys.executable, '-m', 'pip', 'install', package_spec, '--upgrade'
            ], capture_output=True, text=True, check=True)
            
            if result.returncode == 0:
                print(f"{Colors.GREEN}‚úÖ {package_name} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω{Colors.END}")
                self.installed_packages.append(package_name)
                return True
            else:
                print(f"{Colors.RED}‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package_name}: {result.stderr}{Colors.END}")
                self.failed_packages.append(package_name)
                return False
                
        except subprocess.CalledProcessError as e:
            print(f"{Colors.RED}‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package_name}: {e.stderr}{Colors.END}")
            self.failed_packages.append(package_name)
            return False
        except Exception as e:
            print(f"{Colors.RED}‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ {package_name}: {e}{Colors.END}")
            self.failed_packages.append(package_name)
            return False
    
    def check_all_dependencies(self) -> Dict[str, bool]:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        print(f"\n{Colors.BOLD}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...{Colors.END}")
        
        results = {}
        
        for package, min_version in REQUIRED_PACKAGES.items():
            is_installed = self.check_package(package)
            current_version = self.get_package_version(package)
            
            if is_installed:
                print(f"{Colors.GREEN}‚úÖ {package} ({current_version}){Colors.END}")
                results[package] = True
            else:
                print(f"{Colors.RED}‚ùå {package} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω{Colors.END}")
                results[package] = False
                self.missing_packages.append(package)
        
        return results
    
    def install_missing_dependencies(self) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        if not self.missing_packages:
            print(f"{Colors.GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã{Colors.END}")
            return True
        
        print(f"\n{Colors.BOLD}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...{Colors.END}")
        
        success = True
        for package in self.missing_packages:
            version = REQUIRED_PACKAGES.get(package)
            if not self.install_package(package, version):
                success = False
        
        return success
    
    def install_optional_packages(self) -> None:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"""
        print(f"\n{Colors.BOLD}üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...{Colors.END}")
        
        for package, version in OPTIONAL_PACKAGES.items():
            if not self.check_package(package):
                print(f"{Colors.CYAN}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç {package}...{Colors.END}")
                self.install_package(package, version)
    
    def create_config_file(self) -> None:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
        config = {
            "check_interval": 0.5,
            "confirmation_threshold": 3,
            "window_switch_protection_time": 2.0,
            "log_level": "INFO",
            "use_pycaw": self.check_package('pycaw'),
            "auto_start_with_spotify": False,
            "minimize_to_tray": False,
            "ad_detection_methods": {
                "window_title": True,
                "audio_session": True,
                "network_monitoring": False
            },
            "performance": {
                "adaptive_checking": True,
                "cache_window_info": True,
                "max_memory_mb": 100
            }
        }
        
        config_path = Path('config.json')
        try:
            with open(config_path, 'w', encoding='utf-8') as f:
                json.dump(config, f, indent=4, ensure_ascii=False)
            print(f"{Colors.GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {config_path}{Colors.END}")
        except Exception as e:
            print(f"{Colors.YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: {e}{Colors.END}")
    
    def run_system_diagnostics(self) -> None:
        """–ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""
        print(f"\n{Colors.BOLD}üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã...{Colors.END}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        if sys.platform != 'win32':
            print(f"{Colors.RED}‚ùå –≠—Ç–æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è Windows{Colors.END}")
            return
        
        print(f"{Colors.GREEN}‚úÖ –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: Windows{Colors.END}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if self.check_admin_rights():
            print(f"{Colors.GREEN}‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –ï—Å—Ç—å{Colors.END}")
        else:
            print(f"{Colors.YELLOW}‚ö†Ô∏è –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞){Colors.END}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Spotify
        try:
            import psutil
            spotify_running = any('spotify' in p.name().lower() for p in psutil.process_iter(['name']))
            if spotify_running:
                print(f"{Colors.GREEN}‚úÖ Spotify: –ó–∞–ø—É—â–µ–Ω{Colors.END}")
            else:
                print(f"{Colors.YELLOW}‚ö†Ô∏è Spotify: –ù–µ –∑–∞–ø—É—â–µ–Ω{Colors.END}")
        except:
            print(f"{Colors.YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å Spotify{Colors.END}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã
        if self.check_package('pycaw'):
            print(f"{Colors.GREEN}‚úÖ –ê—É–¥–∏–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: pycaw –¥–æ—Å—Ç—É–ø–µ–Ω (–±—ã—Å—Ç—Ä–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞){Colors.END}")
        else:
            print(f"{Colors.YELLOW}‚ö†Ô∏è –ê—É–¥–∏–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è PowerShell (–º–µ–¥–ª–µ–Ω–Ω–µ–µ){Colors.END}")
    
    def create_launcher_script(self) -> None:
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞"""
        launcher_content = '''@echo off
echo –ó–∞–ø—É—Å–∫ Spotify Ad Blocker...
echo.

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
net session >nul 2>&1
if %errorLevel% == 0 (
    echo [OK] –ó–∞–ø—É—â–µ–Ω–æ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
) else (
    echo [WARNING] –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    echo.
)

REM –ó–∞–ø—É—Å–∫ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞
python spotify_ad_blocker.py

echo.
echo –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞...
pause >nul
'''
        
        try:
            with open('start_ad_blocker.bat', 'w', encoding='cp1251') as f:
                f.write(launcher_content)
            print(f"{Colors.GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞: start_ad_blocker.bat{Colors.END}")
        except Exception as e:
            print(f"{Colors.YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞: {e}{Colors.END}")
    
    def print_summary(self) -> None:
        """–í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
        print(f"\n{Colors.BOLD}üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢{Colors.END}")
        print("=" * 50)
        
        if self.installed_packages:
            print(f"{Colors.GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã: {', '.join(self.installed_packages)}{Colors.END}")
        
        if self.failed_packages:
            print(f"{Colors.RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: {', '.join(self.failed_packages)}{Colors.END}")
        
        if not self.missing_packages and not self.failed_packages:
            print(f"{Colors.GREEN}üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!{Colors.END}")
            print(f"{Colors.CYAN}–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –∫–æ–º–∞–Ω–¥–æ–π:{Colors.END}")
            print(f"{Colors.WHITE}python spotify_ad_blocker.py{Colors.END}")
            print(f"{Colors.CYAN}–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç:{Colors.END}")
            print(f"{Colors.WHITE}start_ad_blocker.bat{Colors.END}")
        else:
            print(f"{Colors.YELLOW}‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ë–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é.{Colors.END}")
        
        print("\n" + "=" * 50)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print(f"{Colors.BOLD}{Colors.CYAN}")
    print("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print("‚ïë                 SPOTIFY AD BLOCKER SETUP                    ‚ïë")
    print("‚ïë              –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π          ‚ïë")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
    print(f"{Colors.END}")
    
    manager = DependencyManager()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    if not manager.check_python_version():
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    dependencies_status = manager.check_all_dependencies()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if manager.missing_packages:
        print(f"\n{Colors.YELLOW}‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...{Colors.END}")
        
        if not manager.install_missing_dependencies():
            print(f"{Colors.RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏{Colors.END}")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    try:
        manager.install_optional_packages()
    except KeyboardInterrupt:
        print(f"\n{Colors.YELLOW}‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º{Colors.END}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    manager.create_config_file()
    manager.create_launcher_script()
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    manager.run_system_diagnostics()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    manager.print_summary()
    
    print(f"\n{Colors.GREEN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!{Colors.END}")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print(f"\n{Colors.YELLOW}‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º{Colors.END}")
        sys.exit(1)
    except Exception as e:
        print(f"\n{Colors.RED}‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}{Colors.END}")
        sys.exit(1)