#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å pycaw –¥–ª—è Spotify Ad Blocker

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ pycaw
2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
4. –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫
"""

import sys
import subprocess
import importlib
from pathlib import Path

def check_pycaw() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è pycaw"""
    try:
        import pycaw
        print("‚úÖ pycaw —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except ImportError:
        print("‚ùå pycaw –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def install_pycaw() -> bool:
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pycaw"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é pycaw...")
    
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ pip
        result = subprocess.run([
            sys.executable, '-m', 'pip', 'install', 'pycaw', '--upgrade'
        ], capture_output=True, text=True, check=True)
        
        if result.returncode == 0:
            print("‚úÖ pycaw —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.stderr}")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ pycaw: {e.stderr}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
        print("üîÑ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        try:
            result = subprocess.run([
                sys.executable, '-m', 'pip', 'install', 'pycaw', '--user', '--upgrade'
            ], capture_output=True, text=True, check=True)
            
            if result.returncode == 0:
                print("‚úÖ pycaw —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ --user")
                return True
        except:
            pass
        
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_pycaw_functionality() -> bool:
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ pycaw"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å pycaw...")
    
    try:
        from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
        from comtypes import CLSCTX_ALL
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = interface.QueryInterface(IAudioEndpointVolume)
        
        # –ü–æ–ª—É—á–∏–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏ (–Ω–µ –∏–∑–º–µ–Ω—è–µ–º –µ–≥–æ)
        current_volume = volume.GetMasterVolumeLevel()
        
        print(f"‚úÖ pycaw —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (—Ç–µ–∫—É—â–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å: {current_volume:.2f} dB)")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è pycaw: {e}")
        return False

def check_spotify_blocker() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞"""
    blocker_path = Path('spotify_ad_blocker.py')
    if blocker_path.exists():
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞: {blocker_path}")
        return True
    else:
        print(f"‚ùå –§–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {blocker_path}")
        return False

def offer_restart_blocker() -> None:
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫"""
    if not check_spotify_blocker():
        return
    
    print("\nüöÄ pycaw –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("–¢–µ–ø–µ—Ä—å –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞.")
    
    response = input("\n–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Å–µ–π—á–∞—Å? (y/n): ").lower().strip()
    
    if response in ['y', 'yes', '–¥–∞', '–¥']:
        print("üéµ –ó–∞–ø—É—Å–∫–∞—é Spotify Ad Blocker...")
        try:
            subprocess.Popen([sys.executable, 'spotify_ad_blocker.py'])
            print("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
            print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –≤—Ä—É—á–Ω—É—é: python spotify_ad_blocker.py")
    else:
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã:")
        print("python spotify_ad_blocker.py")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å pycaw –¥–ª—è Spotify Ad Blocker")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if check_pycaw():
        # pycaw —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
        if test_pycaw_functionality():
            print("\nüéâ pycaw —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –ù–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
            print("–í–∞—à –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞.")
        else:
            print("\n‚ö†Ô∏è pycaw —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            print("–ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å...")
            if install_pycaw() and test_pycaw_functionality():
                offer_restart_blocker()
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å pycaw. –ë–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PowerShell.")
    else:
        # pycaw –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        print("\nüì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é pycaw –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...")
        
        if install_pycaw():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
            if check_pycaw() and test_pycaw_functionality():
                offer_restart_blocker()
            else:
                print("‚ùå pycaw —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π.")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pycaw.")
            print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
            print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            print("2. –û–±–Ω–æ–≤–∏—Ç–µ pip: python -m pip install --upgrade pip")
            print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: pip install pycaw")
            print("\n–ë–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ PowerShell (–º–µ–¥–ª–µ–Ω–Ω–µ–µ).")
    
    print("\n" + "=" * 60)
    print("–ì–æ—Ç–æ–≤–æ! –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    input()

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        input()