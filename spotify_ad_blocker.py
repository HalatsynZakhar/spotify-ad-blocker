#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üî• –ê–ì–†–ï–°–°–ò–í–ù–´–ô Spotify Ad Blocker - –ë–ï–ó –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞! üî•

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–´–ï –º–µ—Ç–æ–¥—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã –≤ Spotify
–ë–ï–ó –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞! –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–Ω:

üöÄ –ê–ì–†–ï–°–°–ò–í–ù–´–ï –ú–ï–¢–û–î–´ –ë–õ–û–ö–ò–†–û–í–ö–ò:
- ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–∫–æ–Ω
- ‚è≠Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤
- üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
- üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫—ç—à–∞
- üåê –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è DNS-–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
- üéØ –î–µ—Ç–µ–∫—Ü–∏—è —Ä–µ–∫–ª–∞–º—ã –ø–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º

‚úÖ –ó–í–£–ö –ù–ò–ö–û–ì–î–ê –ù–ï –ë–õ–û–ö–ò–†–£–ï–¢–°–Ø!
‚úÖ –ú—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ!
‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–æ—Ä—å–±–∞ —Å —Ä–µ–∫–ª–∞–º–æ–π!

–ê–≤—Ç–æ—Ä: AI Assistant
–í–µ—Ä—Å–∏—è: 1.0 (–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞)
–î–∞—Ç–∞: 2024
"""

import os
import sys
import time
import json
import shutil
import psutil
import requests
import threading
import subprocess
from pathlib import Path
from typing import List, Dict, Optional
import winreg
from datetime import datetime

class SpotifyAdBlocker:
    def __init__(self):
        self.spotify_process = None
        self.is_running = False
        self.user_home = Path.home()
        self.config_dir = self.user_home / '.spotify_ad_blocker'
        self.config_dir.mkdir(exist_ok=True)
        
        # –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–´–ô —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ Spotify
        self.ad_domains = [
            # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –¥–æ–º–µ–Ω—ã Spotify
            'media-match.com',
            'adclick.g.doublecklick.net',
            'www.googleadservices.com',
            'pagead2.googlesyndication.com',
            'desktop.spotify.com',
            'googleads.g.doubleclick.net',
            'pubads.g.doubleclick.net',
            'audio2.spotify.com',
            'bounceexchange.com',
            'pagead46.l.doubleclick.net',
            'pagead.l.doubleclick.net',
            'video-ad-stats.googlesyndication.com',
            'pagead-googlehosted.l.google.com',
            'partnerad.l.doubleclick.net',
            'adserver.adtechus.com',
            'anycast.pixel.adsafeprotected.com',
            'gads.pubmatic.com',
            'securepubads.g.doubleclick.net',
            'crashdump.spotify.com',
            'adeventtracker.spotify.com',
            'log.spotify.com',
            'analytics.spotify.com',
            'ads-fa.spotify.com',
            'ads.pubmatic.com',
            'www.googletagservices.com',
            'b.scorecardresearch.com',
            'bs.serving-sys.com',
            'doubleclick.net',
            'ds.serving-sys.com',
            'googleadservices.com',
            'js.moatads.com',
            
            # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            'ads.spotify.com',
            'adnxs.com',
            'adsystem.com',
            'amazon-adsystem.com',
            'googlesyndication.com',
            'googletagmanager.com',
            'facebook.com/tr',
            'connect.facebook.net',
            'analytics.google.com',
            'google-analytics.com',
            'googletagservices.com',
            'scorecardresearch.com',
            'quantserve.com',
            'outbrain.com',
            'taboola.com',
            'adsafeprotected.com',
            'moatads.com',
            'adsrvr.org',
            'turn.com',
            'rlcdn.com',
            'rubiconproject.com',
            'pubmatic.com',
            'openx.net',
            'contextweb.com',
            'casalemedia.com',
            'adsymptotic.com',
            'amazon.com/gp/aw/cr',
            'amazon.com/dp/aw/cr',
            'amazon.com/gp/product/aw/cr',
            'amazon.com/gp/aw/d/cr',
            'amazon.com/gp/aw/ol/cr',
            'amazon.com/gp/aw/s/cr',
            'amazon.com/gp/aw/ya/cr',
            'amazon.com/gp/aw/ys/cr',
            'amazon.com/gp/aw/ls/cr',
            'amazon.com/gp/aw/h/cr',
            'amazon.com/gp/aw/c/cr',
            'amazon.com/gp/aw/rd/cr',
            'amazon.com/gp/aw/gb/cr',
            'amazon.com/gp/aw/wl/cr',
            'amazon.com/gp/aw/cart/cr',
            'amazon.com/gp/aw/help/cr',
            'amazon.com/gp/aw/si/cr',
            'amazon.com/gp/aw/ss/cr',
            'amazon.com/gp/aw/sis/cr',
            'amazon.com/gp/aw/fbt/cr',
            'amazon.com/gp/aw/recs/cr',
            'amazon.com/gp/aw/sp/cr',
            'amazon.com/gp/aw/aw/cr',
            'amazon.com/gp/aw/aw/cr',
            
            # Spotify-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –¥–æ–º–µ–Ω—ã
            'spclient.wg.spotify.com',
            'audio-sp-*.pscdn.co',
            'heads4-ak.spotify.com.edgesuite.net',
            'heads-ak.spotify.com.edgesuite.net',
            'audio-ak.spotify.com.edgesuite.net',
            'audio4-ak.spotify.com.edgesuite.net',
            'heads4-ak-spotify-com.akamaized.net',
            'audio4-ak-spotify-com.akamaized.net',
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏
            'spotify.map.fastly.net',
            'spotify.map.fastlylb.net',
            'fastly.com',
            'fastlylb.net',
            'akamai.net',
            'akamaized.net',
            'edgekey.net',
            'edgesuite.net',
            'cloudfront.net'
        ]
        
        self.spotify_paths = [
            self.user_home / 'AppData/Roaming/Spotify',
            self.user_home / 'AppData/Local/Spotify'
        ]
        
    def log(self, message: str, level: str = 'INFO'):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π"""
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        print(f"[{timestamp}] [{level}] {message}")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –ª–æ–≥–∞
        log_file = self.config_dir / 'ad_blocker.log'
        with open(log_file, 'a', encoding='utf-8') as f:
            f.write(f"[{timestamp}] [{level}] {message}\n")
    
    def check_spotify_running(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω –ª–∏ Spotify"""
        for proc in psutil.process_iter(['pid', 'name']):
            try:
                if 'spotify' in proc.info['name'].lower():
                    self.spotify_process = proc
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
        return False
    
    def get_spotify_window_title(self) -> Optional[str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞ Spotify –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã"""
        try:
            import win32gui
            import win32process
            
            def enum_windows_callback(hwnd, windows):
                if win32gui.IsWindowVisible(hwnd):
                    window_title = win32gui.GetWindowText(hwnd)
                    if 'spotify' in window_title.lower():
                        windows.append(window_title)
                return True
            
            windows = []
            win32gui.EnumWindows(enum_windows_callback, windows)
            
            if windows:
                return windows[0]
        except ImportError:
            self.log("–ú–æ–¥—É–ª—å win32gui –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pywin32", "WARNING")
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞: {e}", "ERROR")
        
        return None
    
    def is_ad_playing(self) -> bool:
        """–£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Spotify –≤–æ–æ–±—â–µ –∑–∞–ø—É—â–µ–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω
            if not self._is_spotify_running():
                return False
            
            # –ú–µ—Ç–æ–¥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞ (—Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π)
            title_check = self._check_window_title()
            
            # –ú–µ—Ç–æ–¥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ —Å–µ—Å—Å–∏–∏
            audio_check = self._check_audio_session()
            
            # –ú–µ—Ç–æ–¥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            process_check = self._check_process_names()
            
            # –ú–µ—Ç–æ–¥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–∫–∞
            duration_check = self._check_track_duration()
            
            # –ú–µ—Ç–æ–¥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∫–Ω–∞ (–ù–ï —Ñ–æ–∫—É—Å–∞!)
            window_state_check = self._check_window_focus()
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
            checks = [title_check, audio_check, process_check, duration_check, window_state_check]
            confidence_score = sum(checks)
            
            # –û—á–µ–Ω—å —Å—Ç—Ä–æ–≥–∞—è –ª–æ–≥–∏–∫–∞: —Ç—Ä–µ–±—É–µ–º —è–≤–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–µ–∫–ª–∞–º—ã
            is_ad = False
            
            # –°–∏–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–µ–∫–ª–∞–º—ã - —Ç—Ä–µ–±—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            if title_check and duration_check:
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∫–ª–∞–º—É –ò –ø–∞—Ç—Ç–µ—Ä–Ω —Ç—Ä–µ–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç
                is_ad = True
            elif title_check and audio_check and process_check:
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ + –∞—É–¥–∏–æ + –ø—Ä–æ—Ü–µ—Å—Å (—Ç—Ä–æ–π–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)
                is_ad = True
            elif confidence_score >= 4 and title_check:
                # 4+ –º–µ—Ç–æ–¥–æ–≤ + –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ (–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å)
                is_ad = True
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
            if is_ad:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –ª–æ–∂–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ –∏–∑-–∑–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–∫–æ–Ω
                current_time = time.time()
                if hasattr(self, '_last_window_switch') and (current_time - self._last_window_switch) < 2.0:
                    # –ù–µ–¥–∞–≤–Ω–æ –±—ã–ª–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ–∫–æ–Ω, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
                    return False
            
            if is_ad and not hasattr(self, '_last_ad_detection'):
                self.log(f"–†–µ–∫–ª–∞–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞: –æ–∫–Ω–æ={title_check}, –∞—É–¥–∏–æ={audio_check}, –ø—Ä–æ—Ü–µ—Å—Å={process_check}, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å={duration_check}, —Å–æ—Å—Ç–æ—è–Ω–∏–µ_–æ–∫–Ω–∞={window_state_check}")
                self._last_ad_detection = time.time()
            elif not is_ad and hasattr(self, '_last_ad_detection'):
                delattr(self, '_last_ad_detection')
                
            return is_ad
            
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã: {e}", "ERROR")
            return False
    
    def _get_spotify_window_title(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞ Spotify"""
        try:
            import win32gui
            
            def enum_windows_callback(hwnd, windows):
                if win32gui.IsWindowVisible(hwnd):
                    window_text = win32gui.GetWindowText(hwnd)
                    if 'spotify' in window_text.lower():
                        windows.append(window_text)
                return True
            
            windows = []
            win32gui.EnumWindows(enum_windows_callback, windows)
            
            return windows[0] if windows else None
            
        except ImportError:
            return None
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞: {e}", "ERROR")
            return None
    
    def _check_window_title(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∫–ª–∞–º—ã"""
        title = self._get_spotify_window_title()
        if not title:
            return False
        
        title_lower = title.lower().strip()
        
        # –¢–æ—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–µ–∫–ª–∞–º—ã
        exact_ad_indicators = [
            'advertisement',
            'spotify ad',
            'sponsored',
            'spotify - advertisement'
        ]
        
        for indicator in exact_ad_indicators:
            if indicator in title_lower:
                return True
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–ï —Å—á–∏—Ç–∞–µ–º —Ä–µ–∫–ª–∞–º–æ–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ Spotify
        # –≠—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –ø–∞—É–∑–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –Ω–æ —ç—Ç–æ –ù–ï —Ä–µ–∫–ª–∞–º–∞
        standard_titles = ['spotify', 'spotify free', 'spotify premium']
        if title_lower in standard_titles:
            return False  # –≠—Ç–æ –ù–ï —Ä–µ–∫–ª–∞–º–∞!
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        ad_patterns = [
            'spotify.com',
            'upgrade now',
            'get premium',
            'ad-free music'
        ]
        
        # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ò –Ω–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç—Ä–µ–∫–∞
        if any(pattern in title_lower for pattern in ad_patterns) and ' - ' not in title:
            return True
            
        return False
    
    def _check_audio_session(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã"""
        try:
            from pycaw.pycaw import AudioUtilities
            
            sessions = AudioUtilities.GetAllSessions()
            for session in sessions:
                if session.Process and 'spotify' in session.Process.name().lower():
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É–¥–∏–æ —Å–µ—Å—Å–∏–∏
                    volume = session.SimpleAudioVolume
                    if volume:
                        # –ï—Å–ª–∏ –≥—Ä–æ–º–∫–æ—Å—Ç—å –æ—á–µ–Ω—å –Ω–∏–∑–∫–∞—è, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∫–ª–∞–º–∞
                        current_volume = volume.GetMasterVolume()
                        if current_volume < 0.1:  # –û—á–µ–Ω—å —Ç–∏—Ö–æ
                            return True
                            
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ –ø–æ—Ç–æ–∫–∞
                        # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω
                        if hasattr(session, 'State') and session.State == 0:  # –ù–µ–∞–∫—Ç–∏–≤–µ–Ω
                            return True
                            
        except ImportError:
            self.log("pycaw –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É–¥–∏–æ —Å–µ—Å—Å–∏–∏", "WARNING")
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É–¥–∏–æ —Å–µ—Å—Å–∏–∏: {e}", "DEBUG")
            
        return False
    
    def _check_process_names(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Spotify –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤"""
        try:
            for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
                if 'spotify' in proc.info['name'].lower():
                    cmdline = proc.info.get('cmdline', [])
                    if cmdline:
                        cmdline_str = ' '.join(cmdline).lower()
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
                        if any(indicator in cmdline_str for indicator in 
                               ['ad', 'advertisement', 'sponsored', 'promo']):
                            return True
            return False
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}", "ERROR")
            return False
    
    def _check_track_duration(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ç—Ä–µ–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            window_title = self._get_spotify_window_title()
            if not window_title:
                return False
            
            window_title_lower = window_title.lower().strip()
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ Spotify (–ù–ï —Ä–µ–∫–ª–∞–º–∞)
            standard_titles = ['spotify', 'spotify free', 'spotify premium']
            if window_title_lower in standard_titles:
                return False  # –≠—Ç–æ —Ç–æ—á–Ω–æ –ù–ï —Ä–µ–∫–ª–∞–º–∞!
            
            # –°–∏–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–µ–∫–ª–∞–º—ã –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
            strong_ad_patterns = [
                r'\b(advertisement|sponsored)\b',
                r'spotify\s*-\s*advertisement\b',
                r'\b(upgrade|subscribe)\s*(now|today)\b',
                r'\b(get|try)\s*premium\b',
                r'\bad[\s-]?free\s*music\b'
            ]
            
            import re
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∏–ª—å–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
            for pattern in strong_ad_patterns:
                if re.search(pattern, window_title_lower):
                    return True
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å " - ", —ç—Ç–æ –¢–û–ß–ù–û –º—É–∑—ã–∫–∞, –ù–ï —Ä–µ–∫–ª–∞–º–∞
            if ' - ' in window_title:
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—á–µ–Ω—å —è–≤–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Å–ª–æ–≤–∞
                parts = window_title.split(' - ')
                if len(parts) == 2:
                    artist, track = parts[0].strip(), parts[1].strip()
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—á–µ–Ω—å —è–≤–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
                    explicit_ad_keywords = ['advertisement', 'sponsored', 'spotify ad']
                    if any(keyword in artist.lower() or keyword in track.lower() for keyword in explicit_ad_keywords):
                        return True
                
                return False  # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ "–ê—Ä—Ç–∏—Å—Ç - –¢—Ä–µ–∫" = —ç—Ç–æ –º—É–∑—ã–∫–∞!
            
            # –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            if len(window_title.strip()) < 5:  # –¢–æ–ª—å–∫–æ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–µ
                return False  # –î–∞–∂–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç—Ä–µ–∫–æ–≤
            
            # –ó–∞–≥–æ–ª–æ–≤–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Ç–æ–ª—å–∫–æ URL –∏–ª–∏ –ø—Ä–æ–º–æ-—Ç–µ–∫—Å—Ç
            url_patterns = [r'spotify\.com', r'www\.', r'http']
            if any(re.search(pattern, window_title_lower) for pattern in url_patterns):
                return True
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
            action_patterns = [
                r'\bupgrade\s+to\s+premium\b',
                r'\bget\s+spotify\s+premium\b',
                r'\btry\s+premium\s+free\b'
            ]
            
            for pattern in action_patterns:
                if re.search(pattern, window_title_lower):
                    return True
                
            return False
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ç—Ä–µ–∫–∞: {e}", "ERROR")
            return False
    
    def _is_spotify_running(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ Spotify –∑–∞–ø—É—â–µ–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω"""
        try:
            for proc in psutil.process_iter(['pid', 'name']):
                if 'spotify' in proc.info['name'].lower():
                    return True
            return False
        except Exception:
            return False
    
    def _check_window_focus(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∫–Ω–∞ Spotify (–ù–ï —Ñ–æ–∫—É—Å–∞, –∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è)"""
        try:
            import win32gui
            import win32con
            
            # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–∫–æ–Ω
            try:
                foreground_window = win32gui.GetForegroundWindow()
                foreground_title = win32gui.GetWindowText(foreground_window)
                
                # –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ –æ–∫–Ω–æ PowerShell –∏–ª–∏ –¥—Ä—É–≥–æ–µ –Ω–µ-Spotify –æ–∫–Ω–æ
                if 'powershell' in foreground_title.lower() or 'cmd' in foreground_title.lower():
                    self._last_window_switch = time.time()
                    return False  # –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º —Ä–µ–∫–ª–∞–º—ã
            except Exception:
                pass
            
            def enum_windows_callback(hwnd, windows):
                if win32gui.IsWindowVisible(hwnd):
                    window_text = win32gui.GetWindowText(hwnd)
                    if 'spotify' in window_text.lower():
                        windows.append((hwnd, window_text))
                return True
            
            windows = []
            win32gui.EnumWindows(enum_windows_callback, windows)
            
            for hwnd, title in windows:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∫–Ω–∞
                placement = win32gui.GetWindowPlacement(hwnd)
                if placement[1] == win32con.SW_SHOWMINIMIZED:
                    # –û–∫–Ω–æ —Å–≤–µ—Ä–Ω—É—Ç–æ, –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–∫–Ω–æ –≤–∏–¥–∏–º–æ
                # –†–µ–∫–ª–∞–º–∞ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –æ–∫–Ω–∞
                rect = win32gui.GetWindowRect(hwnd)
                width = rect[2] - rect[0]
                height = rect[3] - rect[1]
                
                # –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–µ –æ–∫–Ω–∞ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –ø–æ–ø–∞–ø–∞–º–∏
                # –ù–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ Spotify
                if width < 200 or height < 150:
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —ç—Ç–æ –Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ Spotify
                    if 'spotify' == title.lower().strip():
                        continue  # –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
                    if any(ad_word in title.lower() for ad_word in ['ad', 'advertisement', 'premium', 'upgrade']):
                        return True
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–æ–±—ã—á–Ω–æ –±–æ–ª—å—à–∏–µ –æ–∫–Ω–∞ (–ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞)
                try:
                    import win32api
                    screen_width = win32api.GetSystemMetrics(0)
                    screen_height = win32api.GetSystemMetrics(1)
                except ImportError:
                    # Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞
                    screen_width = 1920
                    screen_height = 1080
                
                if width > screen_width * 0.9 and height > screen_height * 0.9:
                    # –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∫–ª–∞–º–æ–π
                    if 'advertisement' in title.lower() or 'ad' in title.lower():
                        return True
            
            return False
        except ImportError:
            # win32gui –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É
            return False
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∫–Ω–∞: {e}", "ERROR")
            return False
    
    def block_ad_aggressively(self):
        """–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –ë–ï–ó –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞"""
        try:
            # –ú–µ—Ç–æ–¥ 1: –ó–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–∫–æ–Ω
            self._close_ad_windows()
            
            # –ú–µ—Ç–æ–¥ 2: –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É
            self._skip_ad_track()
            
            # –ú–µ—Ç–æ–¥ 3: –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            self._block_ad_processes()
            
            # –ú–µ—Ç–æ–¥ 4: –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫—ç—à–∞
            self._clear_ad_cache()
            
            self.log("üö´ –†–µ–∫–ª–∞–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ (–∑–≤—É–∫ –ù–ï –æ—Ç–∫–ª—é—á–µ–Ω)")
            
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è: {e}", "ERROR")
    
    def _close_ad_windows(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–∫–æ–Ω –∏ –ø–æ–ø–∞–ø–æ–≤"""
        try:
            import win32gui
            import win32con
            
            def enum_windows_callback(hwnd, windows):
                if win32gui.IsWindowVisible(hwnd):
                    window_text = win32gui.GetWindowText(hwnd)
                    if window_text:
                        window_text_lower = window_text.lower()
                        # –ò—â–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ –æ–∫–Ω–∞
                        ad_keywords = ['advertisement', 'spotify ad', 'premium', 'upgrade', 'sponsored']
                        if any(keyword in window_text_lower for keyword in ad_keywords):
                            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∫–ª–∞–º–Ω–æ–µ –æ–∫–Ω–æ
                            win32gui.PostMessage(hwnd, win32con.WM_CLOSE, 0, 0)
                            self.log(f"üóô –ó–∞–∫—Ä—ã—Ç–æ —Ä–µ–∫–ª–∞–º–Ω–æ–µ –æ–∫–Ω–æ: {window_text}")
                return True
            
            win32gui.EnumWindows(enum_windows_callback, [])
            
        except ImportError:
            self.log("win32gui –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–æ–Ω", "WARNING")
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–∫–æ–Ω: {e}", "ERROR")
    
    def _skip_ad_track(self):
        """–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç—Ä–µ–∫"""
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É "—Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫" —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è
            import win32api
            import win32con
            
            # –ù–∞—Ö–æ–¥–∏–º –æ–∫–Ω–æ Spotify
            import win32gui
            
            def find_spotify_window():
                def enum_windows_callback(hwnd, windows):
                    if win32gui.IsWindowVisible(hwnd):
                        window_text = win32gui.GetWindowText(hwnd)
                        if 'spotify' in window_text.lower():
                            windows.append(hwnd)
                    return True
                
                windows = []
                win32gui.EnumWindows(enum_windows_callback, windows)
                return windows[0] if windows else None
            
            spotify_hwnd = find_spotify_window()
            if spotify_hwnd:
                # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫–Ω–æ Spotify
                win32gui.SetForegroundWindow(spotify_hwnd)
                time.sleep(0.1)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Ctrl+Right (—Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫)
                win32api.keybd_event(win32con.VK_CONTROL, 0, 0, 0)
                win32api.keybd_event(win32con.VK_RIGHT, 0, 0, 0)
                win32api.keybd_event(win32con.VK_RIGHT, 0, win32con.KEYEVENTF_KEYUP, 0)
                win32api.keybd_event(win32con.VK_CONTROL, 0, win32con.KEYEVENTF_KEYUP, 0)
                
                self.log("‚è≠Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç—Ä–µ–∫")
                
        except ImportError:
            self.log("win32api –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã skip", "WARNING")
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ —Ç—Ä–µ–∫–∞: {e}", "ERROR")
    
    def _block_ad_processes(self):
        """–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
        try:
            # –ò—â–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–µ–∫–ª–∞–º–æ–π
            for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
                try:
                    proc_name = proc.info['name'].lower()
                    cmdline = proc.info.get('cmdline', [])
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
                    if 'spotify' in proc_name:
                        cmdline_str = ' '.join(cmdline).lower() if cmdline else ''
                        ad_indicators = ['ad', 'advertisement', 'sponsored', 'promo', 'banner']
                        
                        if any(indicator in cmdline_str for indicator in ad_indicators):
                            # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
                            proc.terminate()
                            self.log(f"üî™ –ó–∞–≤–µ—Ä—à–µ–Ω —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å: {proc_name}")
                            
                except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
                    continue
                    
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}", "ERROR")
    
    def _clear_ad_cache(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫—ç—à–∞"""
        try:
            # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –∫—ç—à–∞
            for spotify_path in self.spotify_paths:
                if spotify_path.exists():
                    # –ò—â–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ñ–∞–π–ª—ã
                    ad_cache_patterns = ['*ad*', '*advertisement*', '*promo*', '*banner*']
                    
                    for pattern in ad_cache_patterns:
                        for cache_file in spotify_path.rglob(pattern):
                            try:
                                if cache_file.is_file():
                                    cache_file.unlink()
                                    self.log(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ñ–∞–π–ª: {cache_file.name}")
                            except Exception:
                                continue
                                
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫—ç—à–∞: {e}", "ERROR")
    
    def create_user_hosts_file(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ hosts —Ñ–∞–π–ª–∞"""
        user_hosts = self.config_dir / 'user_hosts'
        
        hosts_content = "# Spotify Ad Blocker - User Hosts File\n"
        hosts_content += "# –≠—Ç–æ—Ç —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–µ –¥–æ–º–µ–Ω—ã Spotify\n\n"
        
        for domain in self.ad_domains:
            hosts_content += f"127.0.0.1 {domain}\n"
        
        with open(user_hosts, 'w', encoding='utf-8') as f:
            f.write(hosts_content)
        
        self.log(f"–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π hosts —Ñ–∞–π–ª: {user_hosts}")
        return user_hosts
    
    def setup_dns_blocking(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ DNS –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        try:
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π hosts —Ñ–∞–π–ª
            user_hosts = self.create_user_hosts_file()
            
            # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å DNS —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞)
            try:
                key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, 
                                   r"Software\Microsoft\Windows\CurrentVersion\Internet Settings")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ–º–µ–Ω–æ–≤
                winreg.CloseKey(key)
            except Exception as e:
                self.log(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS: {e}", "WARNING")
            
            self.log("DNS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
            
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {e}", "ERROR")
    
    def clear_spotify_cache(self):
        """–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Spotify"""
        try:
            for spotify_path in self.spotify_paths:
                if spotify_path.exists():
                    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
                    cache_dirs = ['Data', 'Browser', 'PersistentCache']
                    for cache_dir in cache_dirs:
                        cache_path = spotify_path / cache_dir
                        if cache_path.exists():
                            try:
                                shutil.rmtree(cache_path)
                                self.log(f"–û—á–∏—â–µ–Ω –∫—ç—à: {cache_path}")
                            except Exception as e:
                                self.log(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å {cache_path}: {e}", "WARNING")
            
            self.log("–ö—ç—à Spotify –æ—á–∏—â–µ–Ω")
            
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: {e}", "ERROR")
    
    def download_nircmd(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ NirCmd –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º"""
        nircmd_path = self.config_dir / 'nircmd.exe'
        
        if nircmd_path.exists():
            return str(nircmd_path)
        
        try:
            self.log("–ó–∞–≥—Ä—É–∑–∫–∞ NirCmd...")
            url = "https://www.nirsoft.net/utils/nircmd.zip"
            response = requests.get(url, timeout=30)
            
            if response.status_code == 200:
                zip_path = self.config_dir / 'nircmd.zip'
                with open(zip_path, 'wb') as f:
                    f.write(response.content)
                
                # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
                import zipfile
                with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                    zip_ref.extractall(self.config_dir)
                
                zip_path.unlink()  # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
                os.environ['PATH'] = str(self.config_dir) + os.pathsep + os.environ['PATH']
                
                self.log("NirCmd –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return str(nircmd_path)
            
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ NirCmd: {e}", "ERROR")
        
        return None
    
    def monitor_spotify(self):
        """–ê–ì–†–ï–°–°–ò–í–ù–´–ô –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Spotify –ë–ï–ó –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞"""
        self.log("üöÄ –ù–∞—á–∞—Ç –ê–ì–†–ï–°–°–ò–í–ù–´–ô –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Spotify (–∑–≤—É–∫ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è!)")
        
        # –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        ad_detection_count = 0
        music_detection_count = 0
        required_confirmations = 2  # –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∫–ª–∞–º—É
        last_ad_block_time = 0
        
        while self.is_running:
            try:
                if self.check_spotify_running():
                    is_ad = self.is_ad_playing()
                    
                    if is_ad:
                        ad_detection_count += 1
                        music_detection_count = 0
                        
                        # –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã (–ë–ï–ó –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞)
                        if ad_detection_count >= required_confirmations:
                            current_time = time.time()
                            # –ë–ª–æ–∫–∏—Ä—É–µ–º –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 3 —Å–µ–∫—É–Ω–¥—ã
                            if current_time - last_ad_block_time > 3.0:
                                self.block_ad_aggressively()
                                last_ad_block_time = current_time
                                self.log(f"üî• –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã –ø–æ—Å–ª–µ {ad_detection_count} –ø—Ä–æ–≤–µ—Ä–æ–∫")
                    else:
                        music_detection_count += 1
                        ad_detection_count = 0
                        
                        # –õ–æ–≥–∏—Ä—É–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –º—É–∑—ã–∫–∏
                        if music_detection_count >= required_confirmations:
                            if hasattr(self, '_last_music_log'):
                                current_time = time.time()
                                if current_time - self._last_music_log > 30:  # –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞–∑ –≤ 30 —Å–µ–∫
                                    self.log(f"üéµ –ú—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ (–∑–≤—É–∫ –ù–ï –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)")
                                    self._last_music_log = current_time
                            else:
                                self.log(f"üéµ –ú—É–∑—ã–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ—Å–ª–µ {music_detection_count} –ø—Ä–æ–≤–µ—Ä–æ–∫")
                                self._last_music_log = time.time()
                else:
                    # Spotify –Ω–µ –∑–∞–ø—É—â–µ–Ω
                    ad_detection_count = 0
                    music_detection_count = 0
                    if hasattr(self, '_last_music_log'):
                        delattr(self, '_last_music_log')
                
                time.sleep(0.3)  # –ï—â–µ –±–æ–ª–µ–µ —á–∞—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                
            except KeyboardInterrupt:
                break
            except Exception as e:
                self.log(f"–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}", "ERROR")
                time.sleep(2)  # –ú–µ–Ω—å—à–∞—è –ø–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –ê–ì–†–ï–°–°–ò–í–ù–û–ì–û –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ —Ä–µ–∫–ª–∞–º—ã (–ë–ï–ó –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞)"""
        self.log("=== –ê–ì–†–ï–°–°–ò–í–ù–´–ô Spotify Ad Blocker –∑–∞–ø—É—â–µ–Ω ===")
        self.log("–í–µ—Ä—Å–∏—è: 1.0 (–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞)")
        self.log("–ê–≤—Ç–æ—Ä: AI Assistant")
        self.log("")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            self.log("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
            
            # –ó–∞–≥—Ä—É–∑–∫–∞ NirCmd –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            try:
                self.download_nircmd()
            except Exception as e:
                self.log(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ NirCmd: {e}", "WARNING")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ê–ì–†–ï–°–°–ò–í–ù–û–ô DNS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            try:
                self.setup_dns_blocking()
            except Exception as e:
                self.log(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ DNS: {e}", "WARNING")
            
            # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Spotify
            try:
                if not self.check_spotify_running():
                    self.clear_spotify_cache()
                else:
                    self.log("Spotify –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞", "WARNING")
            except Exception as e:
                self.log(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}", "WARNING")
            
            # –ó–∞–ø—É—Å–∫ –ê–ì–†–ï–°–°–ò–í–ù–û–ì–û –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            self.is_running = True
            monitor_thread = threading.Thread(target=self.monitor_spotify, daemon=True)
            monitor_thread.start()
            
            self.log("üî• –ê–ì–†–ï–°–°–ò–í–ù–´–ô –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã –∞–∫—Ç–∏–≤–µ–Ω! (–∑–≤—É–∫ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è)")
            self.log("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            self.log("")
            
            # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            try:
                while self.is_running:
                    time.sleep(1)
            except KeyboardInterrupt:
                self.log("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                self.stop()
                raise  # –ü–µ—Ä–µ–¥–∞–µ–º KeyboardInterrupt –¥–∞–ª—å—à–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                
        except KeyboardInterrupt:
            # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
            raise
        except Exception as e:
            self.log(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}", "ERROR")
            self.stop()
            raise  # –ü–µ—Ä–µ–¥–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ main()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ê–ì–†–ï–°–°–ò–í–ù–û–ì–û –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞"""
        self.log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ê–ì–†–ï–°–°–ò–í–ù–û–ì–û –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ —Ä–µ–∫–ª–∞–º—ã...")
        self.is_running = False
        
        self.log("‚úÖ –ê–ì–†–ï–°–°–ò–í–ù–´–ô –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∑–≤—É–∫ –æ—Å—Ç–∞–ª—Å—è –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º)")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        print("")
        print("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
        print("‚ïë                üî• –ê–ì–†–ï–°–°–ò–í–ù–´–ô Spotify Ad Blocker üî•          ‚ïë")
        print("‚ïë                     Python Edition                          ‚ïë")
        print("‚ïë                                                              ‚ïë")
        print("‚ïë  –ê–ì–†–ï–°–°–ò–í–ù–´–ô –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã –ë–ï–ó –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞!      ‚ïë")
        print("‚ïë                                                              ‚ïë")
        print("‚ïë  üöÄ –ê–ì–†–ï–°–°–ò–í–ù–´–ï –ú–ï–¢–û–î–´:                                      ‚ïë")
        print("‚ïë  ‚Ä¢ ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–∫–æ–Ω                                ‚ïë")
        print("‚ïë  ‚Ä¢ ‚è≠Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤                ‚ïë")
        print("‚ïë  ‚Ä¢ üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤                        ‚ïë")
        print("‚ïë  ‚Ä¢ üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫—ç—à–∞                               ‚ïë")
        print("‚ïë  ‚Ä¢ üåê –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è DNS-–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞                           ‚ïë")
        print("‚ïë                                                              ‚ïë")
        print("‚ïë  ‚úÖ –ó–í–£–ö –ù–ò–ö–û–ì–î–ê –ù–ï –ë–õ–û–ö–ò–†–£–ï–¢–°–Ø!                             ‚ïë")
        print("‚ïë                                                              ‚ïë")
        print("‚ïë  –ê–≤—Ç–æ—Ä: AI Assistant                                         ‚ïë")
        print("‚ïë  –í–µ—Ä—Å–∏—è: 1.0 (–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–≤—É–∫–∞)             ‚ïë")
        print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
        print("")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
        if sys.version_info < (3, 6):
            print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.6 –∏–ª–∏ –≤—ã—à–µ")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            sys.exit(1)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        if os.name != 'nt':
            print("‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            sys.exit(1)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        required_modules = ['psutil', 'requests']
        missing_modules = []
        
        for module in required_modules:
            try:
                __import__(module)
            except ImportError:
                missing_modules.append(module)
        
        if missing_modules:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–æ–¥—É–ª–∏: {', '.join(missing_modules)}")
            print(f"–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: pip install {' '.join(missing_modules)}")
            print("")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            sys.exit(1)
        
        # –ó–∞–ø—É—Å–∫ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞
        blocker = SpotifyAdBlocker()
        
        try:
            blocker.start()
        except KeyboardInterrupt:
            print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            blocker.stop()
        except Exception as e:
            print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            blocker.stop()
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            sys.exit(1)
        
        print("\n‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        sys.exit(1)

if __name__ == "__main__":
    main()